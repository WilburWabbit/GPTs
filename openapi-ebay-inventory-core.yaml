# name: ebay-inventory-core
# version: 0.1.3
openapi: 3.1.0
info:
  title: eBay Inventory â€“ Core (Items, Compatibility, Groups, Listing SKU Mappings)
  version: 0.1.3
servers:
  - url: https://api.ebay.com/sell/inventory/v1
    description: Production

components:
  securitySchemes:
    ebay_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.ebay.com/oauth2/authorize
          tokenUrl: https://api.ebay.com/identity/v1/oauth2/token
          scopes:
            https://api.ebay.com/oauth/api_scope/sell.inventory: Inventory write
            https://api.ebay.com/oauth/api_scope/sell.inventory.readonly: Inventory read

  schemas:
    InventoryItem:
      type: object
      required: [sku]
      properties:
        sku: { type: string, description: Seller-defined SKU }
        locale: { type: string, description: BCP-47 tag, e.g., en-GB }
        product:
          type: object
          properties:
            title: { type: string }
            description: { type: string }
            brand: { type: string }
            mpn: { type: string }
            ean: { type: string }
        availability:
          type: object
          properties:
            shipToLocationAvailability:
              type: object
              properties:
                quantity: { type: integer }

    BulkInventoryItemRequest:
      type: object
      required: [requests]
      properties:
        requests:
          type: array
          items:
            type: object
            properties:
              sku: { type: string }
              locale: { type: string }
              product:
                type: object
                properties:
                  title: { type: string }
              availability:
                type: object
                properties:
                  shipToLocationAvailability:
                    type: object
                    properties:
                      quantity: { type: integer }

    BulkInventoryItemResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            type: object
            properties:
              sku: { type: string }
              statusCode: { type: integer }
              errors:
                type: array
                items:
                  type: object
                  properties:
                    message: { type: string }

    BulkGetInventoryItemRequest:
      type: object
      required: [requests]
      properties:
        requests:
          type: array
          items:
            type: object
            properties:
              sku: { type: string }

    ProductCompatibilityRequest:
      type: object
      properties:
        compatibleProducts:
          type: array
          items:
            type: object
            properties:
              make: { type: string }
              model: { type: string }
              year: { type: string }

    InventoryItemGroup:
      type: object
      properties:
        inventoryItemGroupKey: { type: string }
        title: { type: string }
        description: { type: string }

    SkuLocationMapping:
      type: object
      properties:
        shipToLocations:
          type: array
          items:
            type: object
            properties:
              merchantLocationKey: { type: string }
              quantity: { type: integer }

security:
  - ebay_oauth:
    - https://api.ebay.com/oauth/api_scope/sell.inventory

paths:
  /inventory_item:
    get:
      operationId: getInventoryItems
      summary: Get inventory items
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  inventoryItems:
                    type: array
                    items: { $ref: '#/components/schemas/InventoryItem' }

  /inventory_item/{sku}:
    get:
      operationId: getInventoryItem
      summary: Get an inventory item
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/InventoryItem' }
    put:
      operationId: createOrReplaceInventoryItem
      summary: Create or replace inventory item
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/InventoryItem' }
      responses:
        '200': { description: Updated }
        '201': { description: Created }
    delete:
      operationId: deleteInventoryItem
      summary: Delete an inventory item
      responses:
        '204': { description: No Content }

  /bulk_create_or_replace_inventory_item:
    post:
      operationId: bulkCreateOrReplaceInventoryItem
      summary: Bulk create or replace inventory items
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/BulkInventoryItemRequest' }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/BulkInventoryItemResponse' }

  /bulk_get_inventory_item:
    post:
      operationId: bulkGetInventoryItem
      summary: Bulk get inventory items by SKU
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/BulkGetInventoryItemRequest' }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  responses:
                    type: array
                    items:
                      type: object
                      properties:
                        sku: { type: string }
                        inventoryItem: { $ref: '#/components/schemas/InventoryItem' }

  /bulk_migrate_listing:
    post:
      operationId: bulkMigrateListing
      summary: Bulk migrate legacy listings to inventory model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  items: { type: string }
      responses:
        '200': { description: OK }

  /inventory_item/{sku}/product_compatibility:
    get:
      operationId: getProductCompatibility
      summary: Get product compatibility for a SKU
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  compatibleProducts:
                    type: array
                    items:
                      type: object
                      properties:
                        make: { type: string }
                        model: { type: string }
                        year: { type: string }
    put:
      operationId: createOrReplaceProductCompatibility
      summary: Create or replace product compatibility for a SKU
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ProductCompatibilityRequest' }
      responses:
        '200': { description: Updated }
        '201': { description: Created }
    delete:
      operationId: deleteProductCompatibility
      summary: Delete product compatibility for a SKU
      responses:
        '204': { description: No Content }

  /inventory_item_group/{inventoryItemGroupKey}:
    get:
      operationId: getInventoryItemGroup
      summary: Get an inventory item group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/InventoryItemGroup' }
    put:
      operationId: createOrReplaceInventoryItemGroup
      summary: Create or replace an inventory item group
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/InventoryItemGroup' }
      responses:
        '200': { description: Updated }
        '201': { description: Created }
    delete:
      operationId: deleteInventoryItemGroup
      summary: Delete an inventory item group
      responses:
        '204': { description: No Content }

  /listing/{listingId}/sku/{sku}/locations:
    get:
      operationId: getSkuLocationMapping
      summary: Get SKU to location mappings for a listing
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/SkuLocationMapping' }
    put:
      operationId: createOrReplaceSkuLocationMapping
      summary: Create or replace SKU to location mappings for a listing
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SkuLocationMapping' }
      responses:
        '200': { description: OK }
    delete:
      operationId: deleteSkuLocationMapping
      summary: Delete SKU to location mappings for a listing
      responses:
        '204': { description: No Content }
